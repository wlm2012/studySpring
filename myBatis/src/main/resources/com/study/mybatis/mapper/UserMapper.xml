<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.mybatis.mapper.UserMapper">
    <resultMap id="orderMap" type="com.study.mybatis.DO.Order">
        <result column="create_time" property="user.createTime"/>
        <result column="name" property="user.name"/>
        <result column="sex" property="user.sex"/>
        <result column="user_id" property="user.id"/>
        <!--
        使用user.sex，
        或者 association
        或者将sql改为u.user_name as ＂user.userName＂,也可以直接赋值
        <association property="user" javaType="com.lagou.domain.User">
        <result column="sex" property="sex"></result>
        </association>
        如果有重复的column，则自动匹配不生效，需要手动匹配
        -->
        <result column="user_id" property="userId"/>
    </resultMap>

    <!--    一对多，多对多需要使用 collection
    使用collection的时候，需要增加 autoMapping，否则无法自动匹配，建议所有resultMap都增加 autoMapping="true"-->
    <resultMap id="userMap" type="com.study.mybatis.DO.User" autoMapping="true">
        <collection property="orders" ofType="com.study.mybatis.DO.Order">
            <result column="oid" property="id"/>
            <result column="menu_id" property="menuId"/>
            <result column="user_id" property="userId"/>
        </collection>
    </resultMap>

    <select id="findByOrderId" parameterType="list" resultMap="orderMap">
        select a.* ,b.create_time, b.name ,b.sex from t_order a,t_user b
        <where>
            a.user_id=b.id and
            <foreach collection="list" item="id" open="a.id in (" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </select>

    <select id="findById" parameterType="list" resultMap="userMap">
        select a.id, a.name, a.sex, a.create_time, b.id oid, b.menu_id, b.user_id
        from t_user a
        left join t_order b on a.id = b.user_id
        <where>
            <foreach collection="list" item="id" open=" a.id in (" close=")" separator=",">
                #{id}
            </foreach>
        </where>
    </select>


    <!--    需要列启用自增-->
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO t_order1 (menu_id, user_id)
        VALUES (#{menuId}, #{userId});
    </insert>


    <!--
          oracle SELECT SEQ_ID.nextval from dual
          DB2 使用 VALUES IDENTITY_VAL_LOCAL()。
        · MYSQL 使用 SELECT LAST_INSERT_ID()。
        · SQLSERVER 使用 SELECT SCOPE_IDENTITY()。
        · CLOUDSCAPE 使用 VALUES IDENTITY_VAL_LOCAL()。
        · DERBY 使用 VALUES IDENTITY_VAL_LOCAL()。
        · HSQLDB 使用 CALL IDENTITY()。
        · SYBASE 使用 SELECT @@IDENTITY。
        · DB2_MF 使用 SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1。
        · INFORMIX 使用 select dbinfo('sqlca.sqlerrd1') from systables where
        tabid=1。-->
    <insert id="insert2">
        INSERT INTO t_order1 (menu_id, user_id)
        VALUES (#{menuId}, #{userId})
        <selectKey keyProperty="id" keyColumn="id" resultType="long" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
</mapper>